name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - 'feature/*'
      - 'release/*'
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Java (use the version required by your project)
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven Repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build with Maven
      - name: Build and Test with Maven
        run: mvn clean install
#
#  docker-deploy:
#    name: Build and Push Docker Image
#    runs-on: ubuntu-latest
#    needs: build # Runs only after the 'build' job succeeds
#
#    steps:
#      # Step 1: Check out the code
#      - name: Checkout Code
#        uses: actions/checkout@v3
#
#      # Step 2: Log in to DockerHub
#      - name: Log in to DockerHub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      # Step 3: Build and Push Docker Image
#      - name: Build and Push Docker Image
#        run: |
#          docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-boot-app:${{ github.sha }} .
#          docker push ${{ secrets.DOCKER_USERNAME }}/spring-boot-app:${{ github.sha }}
